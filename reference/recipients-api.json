{
  "openapi": "3.1.0",
  "info": {
    "title": "Recipients API",
    "version": "1.0.0",
    "description": "API for managing recipients in split payment scenarios. This feature enables merchants to split payments among multiple recipients, which is particularly beneficial for marketplace models where transactions need to be divided among different sellers or stakeholders."
  },
  "servers": [
    {
      "url": "https://api-sandbox.y.uno/v1"
    }
  ],
  "components": {
    "securitySchemes": {
      "sec0": {
        "type": "apiKey",
        "in": "header",
        "name": "public-api-key",
        "x-default": "<Your public-api-key>"
      },
      "sec1": {
        "type": "apiKey",
        "in": "header",
        "name": "private-secret-key",
        "x-default": "<Your private-secret-key>"
      }
    },
    "schemas": {
      "Recipient": {
        "type": "object",
        "required": [
          "account_id",
          "national_entity",
          "first_name"
        ],
        "properties": {
          "account_id": {
            "type": "string",
            "description": "Unique id of the account in Yuno (MAX 64; MIN 36).",
            "example": "9104911d-5df9-429e-8488-ad41abea1a4b"
          },
          "merchant_recipient_id": {
            "type": "string",
            "description": "Unique identifier of the recipient defined by the merchant (MAX 255; MIN 1).",
            "example": "AAAA01"
          },
          "national_entity": {
            "type": "string",
            "enum": [
              "INDIVIDUAL",
              "ENTITY"
            ],
            "description": "Beneficiary's national entity type. Could be INDIVIDUAL or ENTITY.",
            "example": "INDIVIDUAL"
          },
          "first_name": {
            "type": "string",
            "description": "Beneficiary's name. (MAX 80; MIN 1).",
            "example": "John"
          },
          "last_name": {
            "type": "string",
            "description": "Beneficiary's last name. (MAX 80; MIN 1).",
            "example": "Doe"
          },
          "legal_name": {
            "type": "string",
            "description": "Beneficiary's name. (MAX 80; MIN 1) Only necessary when national entity is ENTITY.",
            "example": "Arcos dorados S.A."
          },
          "email": {
            "type": "string",
            "description": "The Beneficiary's email (MAX 255; MIN 3).",
            "example": "john.doe@email.com"
          },
          "country": {
            "type": "string",
            "description": "The Beneficiary's country (ISO 3166-1 MAX 2; MIN 2).",
            "example": "CO"
          },
          "document": {
            "type": "object",
            "description": "Beneficiary's document information",
            "required": [
              "document_number",
              "document_type"
            ],
            "properties": {
              "document_number": {
                "type": "string",
                "description": "Beneficiary's national document id (MAX 40; MIN 3).",
                "example": "1093333333"
              },
              "document_type": {
                "type": "string",
                "description": "Beneficiary's document type (MAX 6; MIN 2).",
                "example": "CC"
              }
            }
          },
          "phone": {
            "type": "object",
            "description": "Beneficiary's phone information",
            "required": [
              "country_code",
              "number"
            ],
            "properties": {
              "country_code": {
                "type": "string",
                "description": "Beneficiary's cell phone area code. (MAX 3; MIN 2).",
                "example": "57"
              },
              "number": {
                "type": "string",
                "description": "Beneficiary's cell phone number. (MAX 32; MIN 1).",
                "example": "3132450765"
              }
            }
          },
          "address": {
            "type": "object",
            "description": "Beneficiary's address information",
            "required": [
              "address_line_1",
              "city"
            ],
            "properties": {
              "address_line_1": {
                "type": "string",
                "description": "The primary billing address line of the customer (MAX 255; MIN 3).",
                "example": "Calle 34 # 56 - 78"
              },
              "address_line_2": {
                "type": "string",
                "description": "The secondary billing address line of the customer (MAX 255; MIN 3).",
                "example": "Apartamento 502, Torre I"
              },
              "city": {
                "type": "string",
                "description": "The city considered for the billing address (MAX 255; MIN 3).",
                "example": "Bogota"
              },
              "country": {
                "type": "string",
                "description": "The customer's country (ISO 3166-1 MAX 2; MIN 2).",
                "example": "CO"
              },
              "state": {
                "type": "string",
                "description": "The state / province considered for the billing address (MAX 255; MIN 3).",
                "example": "Cundinamarca"
              },
              "zip_code": {
                "type": "string",
                "description": "The zipcode considered for the billing address (MAX 11; MIN 4).",
                "example": "111111"
              }
            }
          },
          "withdrawal_methods": {
            "type": "array",
            "description": "Withdrawal methods for the merchant",
            "items": {
              "type": "object",
              "properties": {
                "bank": {
                  "type": "object",
                  "description": "Bank's account information",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "Bank's code (MAX 3; MIN 3).",
                      "example": "246"
                    },
                    "branch": {
                      "type": "string",
                      "description": "Bank's branch (MAX 3; MIN 3).",
                      "example": "XXXX"
                    },
                    "branch_digit": {
                      "type": "string",
                      "description": "Bank's branch digit (MAX 3; MIN 3)."
                    },
                    "account": {
                      "type": "string",
                      "description": "Beneficiary's bank account number (MAX 250; MIN 3).",
                      "example": "1093333333"
                    },
                    "account_digit": {
                      "type": "string",
                      "description": "Beneficiary's bank account digit (MAX 250; MIN 3)."
                    },
                    "account_type": {
                      "type": "string",
                      "enum": [
                        "CHECKINGS",
                        "SAVINGS",
                        "VISTA",
                        "PIX_EMAIL",
                        "PIX_PHONE",
                        "PIX_DOCUMENT_ID",
                        "PIX_BANK_ACCOUNT"
                      ],
                      "description": "Beneficiary's bank account type (MAX 3; MIN 1). Could be: CHECKINGS, SAVINGS, VISTA, PIX_EMAIL, PIX_PHONE, PIX_DOCUMENT_ID, PIX_BANK_ACCOUNT.",
                      "example": "SAVINGS"
                    },
                    "routing": {
                      "type": "string",
                      "description": "Beneficiary's bank account routing number.",
                      "example": "XXXXYYYYC"
                    },
                    "country": {
                      "type": "string",
                      "description": "The bank account's country (ISO 3166-1 MAX 2; MIN 2).",
                      "example": "CO"
                    },
                    "currency": {
                      "type": "string",
                      "description": "The bank account's currency (ISO 4217 MAX 3; MIN 3).",
                      "example": "COP"
                    }
                  }
                }
              }
            },
            "documentation": {
              "type": "array",
              "description": "Array of documentation objects",
              "items": {
                "type": "object",
                "required": [
                  "file_name",
                  "content_type",
                  "content_category",
                  "content"
                ],
                "properties": {
                  "file_name": {
                    "type": "string",
                    "description": "The name of the documentation sent (MAX 255; MIN 3).",
                    "example": "PDF"
                  },
                  "content_type": {
                    "type": "string",
                    "description": "The type of the documentation sent by the merchant.",
                    "example": "RECEIPT"
                  },
                  "content_category": {
                    "type": "string",
                    "description": "The category of the documentation sent by the merchant."
                  },
                  "content": {
                    "type": "string",
                    "description": "The content of the documentation sent by the merchant encoded in base64. Max size: 1MB.",
                    "example": "sdadsadasdsad"
                  }
                }
              }
            },
            "onboardings": {
              "type": "array",
              "description": "Array of onboarding objects for different payment providers",
              "items": {
                "type": "object",
                "required": [
                  "type",
                  "workflow",
                  "provider"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "PREVIOUSLY_ONBOARDED",
                      "ONBOARD_ONTO_THE_PROVIDER"
                    ],
                    "description": "Type of onboarding. If its done by Yuno.",
                    "example": "PREVIOUSLY_ONBOARDED"
                  },
                  "workflow": {
                    "type": "string",
                    "enum": [
                      "HOSTED_BY_PROVIDER",
                      "DIRECT"
                    ],
                    "description": "Workflow of the onboarding.",
                    "example": "HOSTED_BY_PROVIDER"
                  },
                  "callback_url": {
                    "type": "string",
                    "description": "URL in case to redirect your customer after the onboarding process with the provider, if needed.",
                    "example": "https://www.google.com"
                  },
                  "provider": {
                    "type": "object",
                    "required": [
                      "id"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Provider id.",
                        "enum": [
                          "PAGARME", 
                          "ALELO", 
                          "EDENRED", 
                          "PLUXEE", 
                          "VR", 
                          "STRIPE", 
                          "ADYEN"
                        ],
                        "example": "PAGARME"
                      },
                      "recipient_id": {
                        "type": "string",
                        "description": "The unique identifier of the provider's recipient.",
                        "example": "AAAAA01"
                      }
                    }
                  },
                  "documentation": {
                    "type": "array",
                    "description": "Array of documentation objects for this onboarding",
                    "items": {
                      "type": "object",
                      "required": [
                        "file_name",
                        "content_type",
                        "content_category",
                        "content"
                      ],
                      "properties": {
                        "file_name": {
                          "type": "string",
                          "description": "The name of the documentation sent (MAX 255; MIN 3).",
                          "example": "PDF"
                        },
                        "content_type": {
                          "type": "string",
                          "description": "The type of the documentation sent by the merchant.",
                          "example": "RECEIPT"
                        },
                        "content_category": {
                          "type": "string",
                          "description": "The category of the documentation sent by the merchant."
                        },
                        "content": {
                          "type": "string",
                          "description": "The content of the documentation sent by the merchant encoded in base64. Max size: 1MB.",
                          "example": "sdadsadasdsad"
                        }
                      }
                    }
                  },
                  "withdrawal_methods": {
                    "type": "array",
                    "description": "Withdrawal methods for this onboarding",
                    "items": {
                      "type": "object",
                      "properties": {
                        "bank": {
                          "type": "object",
                          "description": "Bank's account information",
                          "properties": {
                            "code": {
                              "type": "string",
                              "description": "Bank's code (MAX 3; MIN 3).",
                              "example": "246"
                            },
                            "branch": {
                              "type": "string",
                              "description": "Bank's branch (MAX 3; MIN 3).",
                              "example": "XXXX"
                            },
                            "branch_digit": {
                              "type": "string",
                              "description": "Bank's branch digit (MAX 3; MIN 3)."
                            },
                            "account": {
                              "type": "string",
                              "description": "Beneficiary's bank account number (MAX 250; MIN 3).",
                              "example": "1093333333"
                            },
                            "account_digit": {
                              "type": "string",
                              "description": "Beneficiary's bank account digit (MAX 250; MIN 3)."
                            },
                            "account_type": {
                              "type": "string",
                              "enum": [
                                "CHECKINGS",
                                "SAVINGS",
                                "VISTA",
                                "PIX_EMAIL",
                                "PIX_PHONE",
                                "PIX_DOCUMENT_ID",
                                "PIX_BANK_ACCOUNT"
                              ],
                              "description": "Beneficiary's bank account type (MAX 3; MIN 1). Could be: CHECKINGS, SAVINGS, VISTA, PIX_EMAIL, PIX_PHONE, PIX_DOCUMENT_ID, PIX_BANK_ACCOUNT.",
                              "example": "SAVINGS"
                            },
                            "routing": {
                              "type": "string",
                              "description": "Beneficiary's bank account routing number.",
                              "example": "XXXXYYYYC"
                            },
                            "country": {
                              "type": "string",
                              "description": "The bank account's country (ISO 3166-1 MAX 2; MIN 2).",
                              "example": "CO"
                            },
                            "currency": {
                              "type": "string",
                              "description": "The bank account's currency (ISO 4217 MAX 3; MIN 3).",
                              "example": "COP"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "RecipientResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of the recipient.",
            "example": "9104911d-5df9-429e-8488-ad41abea1a4b"
          },
          "account_id": {
            "type": "string",
            "description": "The account identifier associated with this recipient.",
            "example": "9104911d-5df9-429e-8488-ad41abea1a4b"
          },
          "merchant_recipient_id": {
            "type": "string",
            "description": "Unique identifier of the recipient defined by the merchant.",
            "example": "AAAA01"
          },
          "national_entity": {
            "type": "string",
            "description": "Beneficiary's national entity type.",
            "example": "INDIVIDUAL"
          },
          "first_name": {
            "type": "string",
            "description": "Beneficiary's name.",
            "example": "John"
          },
          "last_name": {
            "type": "string",
            "description": "Beneficiary's last name.",
            "example": "Doe"
          },
          "legal_name": {
            "type": "string",
            "description": "Beneficiary's legal name.",
            "example": "Arcos dorados S.A."
          },
          "email": {
            "type": "string",
            "description": "The Beneficiary's email.",
            "example": "john.doe@email.com"
          },
          "country": {
            "type": "string",
            "description": "The Beneficiary's country.",
            "example": "CO"
          },
          "document": {
            "type": "object",
            "properties": {
              "document_number": {
                "type": "string",
                "example": "1093333333"
              },
              "document_type": {
                "type": "string",
                "example": "CC"
              }
            }
          },
          "phone": {
            "type": "object",
            "properties": {
              "country_code": {
                "type": "string",
                "example": "57"
              },
              "number": {
                "type": "string",
                "example": "3132450765"
              }
            }
          },
          "address": {
            "type": "object",
            "properties": {
              "address_line_1": {
                "type": "string",
                "example": "Calle 34 # 56 - 78"
              },
              "address_line_2": {
                "type": "string",
                "example": "Apartamento 502, Torre I"
              },
              "city": {
                "type": "string",
                "example": "Bogota"
              },
              "country": {
                "type": "string",
                "example": "CO"
              },
              "state": {
                "type": "string",
                "example": "Cundinamarca"
              },
              "zip_code": {
                "type": "string",
                "example": "111111"
              }
            }
          },
          "withdrawal_methods": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "bank": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "246"
                    },
                    "branch": {
                      "type": "string",
                      "example": "XXXX"
                    },
                    "branch_digit": {
                      "type": "string"
                    },
                    "account": {
                      "type": "string",
                      "example": "1093333333"
                    },
                    "account_digit": {
                      "type": "string"
                    },
                    "account_type": {
                      "type": "string",
                      "example": "SAVINGS"
                    },
                    "routing": {
                      "type": "string",
                      "example": "XXXXYYYYC"
                    },
                    "country": {
                      "type": "string",
                      "example": "CO"
                    },
                    "currency": {
                      "type": "string",
                      "example": "COP"
                    }
                  }
                }
              }
            }
          },
          "documentation": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "file_name": {
                  "type": "string",
                  "example": "PDF"
                },
                "content_type": {
                  "type": "string",
                  "example": "RECEIPT"
                },
                "content_category": {
                  "type": "string"
                },
                "content": {
                  "type": "string",
                  "example": "sdadsadasdsad"
                }
              }
            }
          },
          "onboardings": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "9104911d-5df9-429e-8488-ad41abea1a4b"
                },
                "type": {
                  "type": "string",
                  "example": "PREVIOUSLY_ONBOARDED"
                },
                "workflow": {
                  "type": "string",
                  "example": "HOSTED_BY_PROVIDER"
                },
                "status": {
                  "type": "string",
                  "example": "PENDING"
                },
                "callback_url": {
                  "type": "string",
                  "example": "https://www.google.com"
                },
                "provider": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": ["PAGARME", "ALELO", "EDENRED", "PLUXEE", "VR", "STRIPE", "ADYEN"]
                    },
                    "redirect_url": {
                      "type": "string",
                      "example": "https://www.stripe.com"
                    },
                    "recipient_id": {
                      "type": "string",
                      "example": "AAAAA01"
                    }
                  }
                },
                "documentation": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "file_name": {
                        "type": "string",
                        "example": "PDF"
                      },
                      "content_type": {
                        "type": "string",
                        "example": "RECEIPT"
                      },
                      "content_category": {
                        "type": "string"
                      },
                      "content": {
                        "type": "string",
                        "example": "sdadsadasdsad"
                      }
                    }
                  }
                },
                "withdrawal_methods": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "bank": {
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "string",
                            "example": "246"
                          },
                          "branch": {
                            "type": "string",
                            "example": "XXXX"
                          },
                          "branch_digit": {
                            "type": "string"
                          },
                          "account": {
                            "type": "string",
                            "example": "1093333333"
                          },
                          "account_digit": {
                            "type": "string"
                          },
                          "account_type": {
                            "type": "string",
                            "example": "SAVINGS"
                          },
                          "routing": {
                            "type": "string",
                            "example": "XXXXYYYYC"
                          },
                          "country": {
                            "type": "string",
                            "example": "CO"
                          },
                          "currency": {
                            "type": "string",
                            "example": "COP"
                          }
                        }
                      }
                    }
                  }
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2022-05-09T20:46:54.786342Z"
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2022-07-09T20:43:54.786342Z"
                }
              }
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Recipient creation date (ISO 8601 MAX 27; MIN 27).",
            "example": "2022-05-09T20:46:54.786342Z"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Last Recipient updated date (ISO 8601 MAX 27; MIN 27).",
            "example": "2022-07-09T20:43:54.786342Z"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "example": "INVALID_REQUEST"
          },
          "messages": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "Invalid request"
            }
          }
        }
      }
    }
  },
  "security": [
    {
      "sec0": [],
      "sec1": []
    }
  ],
  "paths": {
    "/recipients": {
      "post": {
        "summary": "Create Recipient",
        "description": "Creates a new recipient for split payment scenarios. This endpoint allows merchants to define recipients that can receive portions of payments in marketplace or split payment models.",
        "operationId": "create-recipient",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Recipient"
              },
              "examples": {
                "Individual Recipient": {
                  "value": {
                    "account_id": "9104911d-5df9-429e-8488-ad41abea1a4b",
                    "merchant_recipient_id": "AAAA01",
                    "national_entity": "INDIVIDUAL",
                    "first_name": "John",
                    "last_name": "Doe",
                    "email": "john.doe@email.com",
                    "country": "CO",
                    "document": {
                      "document_number": "1093333333",
                      "document_type": "CC"
                    },
                    "phone": {
                      "country_code": "57",
                      "number": "3132450765"
                    },
                    "address": {
                      "address_line_1": "Calle 34 # 56 - 78",
                      "address_line_2": "Apartamento 502, Torre I",
                      "city": "Bogota",
                      "country": "CO",
                      "state": "Cundinamarca",
                      "zip_code": "111111"
                    },
                    "withdrawal_methods": [
                      {
                        "bank": {
                          "code": "246",
                          "branch": "XXXX",
                          "account": "1093333333",
                          "account_type": "SAVINGS"
                        }
                      }
                    ],
                    "onboardings": [
                      {
                        "type": "PREVIOUSLY_ONBOARDED",
                        "workflow": "HOSTED_BY_PROVIDER",
                        "callback_url": "https://www.google.com",
                        "provider": {
                          "id": "PAGARME"
                        }
                      }
                    ]
                  }
                },
                "Entity Recipient": {
                  "value": {
                    "account_id": "9104911d-5df9-429e-8488-ad41abea1a4b",
                    "merchant_recipient_id": "AAAA02",
                    "national_entity": "ENTITY",
                    "first_name": "Business",
                    "last_name": "Corp",
                    "legal_name": "Arcos dorados S.A.",
                    "email": "business@corp.com",
                    "country": "CO",
                    "document": {
                      "document_number": "900123456",
                      "document_type": "NIT"
                    },
                    "phone": {
                      "country_code": "57",
                      "number": "1234567890"
                    },
                    "address": {
                      "address_line_1": "Calle 123 # 45 - 67",
                      "city": "Medellin",
                      "country": "CO",
                      "state": "Antioquia",
                      "zip_code": "050001"
                    },
                    "onboardings": [
                      {
                        "type": "ONBOARD_ONTO_THE_PROVIDER",
                        "callback_url": "https://myapp.com/callback",
                        "provider": {
                          "id": "STRIPE"
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Recipient created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecipientResponse"
                },
                "examples": {
                  "Success Response": {
                    "value": {
                      "id": "9104911d-5df9-429e-8488-ad41abea1a4b",
                      "account_id": "9104911d-5df9-429e-8488-ad41abea1a4b",
                      "merchant_recipient_id": "AAAA01",
                      "national_entity": "INDIVIDUAL",
                      "first_name": "John",
                      "last_name": "Doe",
                      "legal_name": "Arcos dorados S.A.",
                      "email": "john.doe@email.com",
                      "country": "CO",
                      "document": {
                        "document_number": "1093333333",
                        "document_type": "CC"
                      },
                      "phone": {
                        "country_code": "57",
                        "number": "3132450765"
                      },
                      "address": {
                        "address_line_1": "Calle 34 # 56 - 78",
                        "address_line_2": "Apartamento 502, Torre I",
                        "city": "Bogota",
                        "country": "CO",
                        "state": "Cundinamarca",
                        "zip_code": "111111"
                      },
                      "withdrawal_methods": [
                        {
                          "bank": {
                            "code": "246",
                            "branch": "XXXX",
                            "account": "1093333333",
                            "account_type": "SAVINGS"
                          }
                        }
                      ],
                      "onboardings": [
                        {
                          "type": "PREVIOUSLY_ONBOARDED",
                          "workflow": "HOSTED_BY_PROVIDER",
                          "callback_url": "https://www.google.com",
                          "provider": {
                            "id": "PAGARME"
                          }
                        }
                      ],
                      "created_at": "2024-01-15T10:30:00Z",
                      "updated_at": "2024-01-15T10:30:00Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Invalid Request": {
                    "value": {
                      "code": "INVALID_REQUEST",
                      "messages": [
                        "account_id is required",
                        "national_entity must be INDIVIDUAL or ENTITY",
                        "first_name is required"
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Unauthorized": {
                    "value": {
                      "code": "INVALID_CREDENTIALS",
                      "messages": [
                        "Invalid credentials"
                      ]
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Forbidden": {
                    "value": {
                      "code": "AUTHORIZATION_REQUIRED",
                      "messages": [
                        "The merchant has no authorization to use this API."
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "List Recipients",
        "description": "Retrieves a list of recipients for the authenticated account. Supports pagination and filtering.",
        "operationId": "list-recipients",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of recipients to return",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 20,
              "minimum": 1,
              "maximum": 100
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Number of recipients to skip for pagination",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "minimum": 0
            }
          },
          {
            "name": "national_entity",
            "in": "query",
            "description": "Filter recipients by national entity type",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "INDIVIDUAL",
                "ENTITY"
              ]
            }
          },
          {
            "name": "country",
            "in": "query",
            "description": "Filter recipients by country",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of recipients retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/RecipientResponse"
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer",
                          "description": "Total number of recipients"
                        },
                        "limit": {
                          "type": "integer",
                          "description": "Number of recipients per page"
                        },
                        "offset": {
                          "type": "integer",
                          "description": "Current offset"
                        },
                        "has_more": {
                          "type": "boolean",
                          "description": "Whether there are more recipients to fetch"
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Success Response": {
                    "value": {
                      "data": [
                        {
                          "id": "9104911d-5df9-429e-8488-ad41abea1a4b",
                          "account_id": "9104911d-5df9-429e-8488-ad41abea1a4b",
                          "merchant_recipient_id": "AAAA01",
                          "national_entity": "INDIVIDUAL",
                          "first_name": "John",
                          "last_name": "Doe",
                          "email": "john.doe@email.com",
                          "country": "CO",
                          "created_at": "2024-01-15T10:30:00Z",
                          "updated_at": "2024-01-15T10:30:00Z"
                        }
                      ],
                      "pagination": {
                        "total": 1,
                        "limit": 20,
                        "offset": 0,
                        "has_more": false
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/recipients/{recipient_id}": {
      "parameters": [
        {
          "name": "recipient_id",
          "in": "path",
          "required": true,
          "description": "The unique identifier of the recipient",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "Get Recipient",
        "description": "Retrieves detailed information about a specific recipient.",
        "operationId": "get-recipient",
        "responses": {
          "200": {
            "description": "Recipient details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecipientResponse"
                },
                "examples": {
                  "Success Response": {
                    "value": {
                      "id": "9104911d-5df9-429e-8488-ad41abea1a4b",
                      "account_id": "9104911d-5df9-429e-8488-ad41abea1a4b",
                      "merchant_recipient_id": "AAAA01",
                      "national_entity": "INDIVIDUAL",
                      "first_name": "John",
                      "last_name": "Doe",
                      "legal_name": "Arcos dorados S.A.",
                      "email": "john.doe@email.com",
                      "country": "CO",
                      "document": {
                        "document_number": "1093333333",
                        "document_type": "CC"
                      },
                      "phone": {
                        "country_code": "57",
                        "number": "3132450765"
                      },
                      "address": {
                        "address_line_1": "Calle 34 # 56 - 78",
                        "address_line_2": "Apartamento 502, Torre I",
                        "city": "Bogota",
                        "country": "CO",
                        "state": "Cundinamarca",
                        "zip_code": "111111"
                      },
                      "withdrawal_methods": [
                        {
                          "bank": {
                            "code": "246",
                            "branch": "XXXX",
                            "account": "1093333333",
                            "account_type": "SAVINGS"
                          }
                        }
                      ],
                      "onboardings": [
                        {
                          "type": "PREVIOUSLY_ONBOARDED",
                          "workflow": "HOSTED_BY_PROVIDER",
                          "callback_url": "https://www.google.com",
                          "provider": {
                            "id": "PAGARME"
                          }
                        }
                      ],
                      "created_at": "2024-01-15T10:30:00Z",
                      "updated_at": "2024-01-15T10:30:00Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Recipient not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "code": "RECIPIENT_NOT_FOUND",
                      "messages": [
                        "Recipient not found"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update Recipient",
        "description": "Updates an existing recipient. Only specified fields will be updated.",
        "operationId": "update-recipient",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "merchant_recipient_id": {
                    "type": "string",
                    "description": "Unique identifier of the recipient defined by the merchant (MAX 255; MIN 1)."
                  },
                  "first_name": {
                    "type": "string",
                    "description": "Beneficiary's name. (MAX 80; MIN 1)."
                  },
                  "last_name": {
                    "type": "string",
                    "description": "Beneficiary's last name. (MAX 80; MIN 1)."
                  },
                  "legal_name": {
                    "type": "string",
                    "description": "Beneficiary's name. (MAX 80; MIN 1) Only necessary when national entity is ENTITY."
                  },
                  "email": {
                    "type": "string",
                    "description": "The Beneficiary's email (MAX 255; MIN 3)."
                  },
                  "phone": {
                    "type": "object",
                    "properties": {
                      "country_code": {
                        "type": "string",
                        "description": "Beneficiary's cell phone area code. (MAX 3; MIN 2)."
                      },
                      "number": {
                        "type": "string",
                        "description": "Beneficiary's cell phone number. (MAX 32; MIN 1)."
                      }
                    }
                  },
                  "address": {
                    "type": "object",
                    "properties": {
                      "address_line_1": {
                        "type": "string",
                        "description": "The primary billing address line of the customer (MAX 255; MIN 3)."
                      },
                      "address_line_2": {
                        "type": "string",
                        "description": "The secondary billing address line of the customer (MAX 255; MIN 3)."
                      },
                      "city": {
                        "type": "string",
                        "description": "The city considered for the billing address (MAX 255; MIN 3)."
                      },
                      "state": {
                        "type": "string",
                        "description": "The state / province considered for the billing address (MAX 255; MIN 3)."
                      },
                      "zip_code": {
                        "type": "string",
                        "description": "The zipcode considered for the billing address (MAX 11; MIN 4)."
                      }
                    }
                  },
                  "withdrawal_methods": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "bank": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "description": "Bank's code (MAX 3; MIN 3)."
                            },
                            "branch": {
                              "type": "string",
                              "description": "Bank's branch (MAX 3; MIN 3)."
                            },
                            "branch_digit": {
                              "type": "string",
                              "description": "Bank's branch digit (MAX 3; MIN 3)."
                            },
                            "account": {
                              "type": "string",
                              "description": "Beneficiary's bank account number (MAX 250; MIN 3)."
                            },
                            "account_digit": {
                              "type": "string",
                              "description": "Beneficiary's bank account digit (MAX 250; MIN 3)."
                            },
                            "account_type": {
                              "type": "string",
                              "enum": [
                                "CHECKINGS",
                                "SAVINGS"
                              ],
                              "description": "Beneficiary's bank account type (MAX 3; MIN 1)."
                            },
                            "routing": {
                              "type": "string",
                              "description": "Beneficiary's bank account routing number."
                            },
                            "country": {
                              "type": "string",
                              "description": "The bank account's country (ISO 3166-1 MAX 2; MIN 2)."
                            },
                            "currency": {
                              "type": "string",
                              "description": "The bank account's currency (ISO 4217 MAX 3; MIN 3)."
                            }
                          }
                        }
                      }
                    }
                  },
                  "documentation": {
                    "type": "array",
                    "description": "Array of documentation objects",
                    "items": {
                      "type": "object",
                      "properties": {
                        "file_name": {
                          "type": "string",
                          "description": "The name of the documentation sent (MAX 255; MIN 3)."
                        },
                        "content_type": {
                          "type": "string",
                          "description": "The type of the documentation sent by the merchant."
                        },
                        "content_category": {
                          "type": "string",
                          "description": "The category of the documentation sent by the merchant."
                        },
                        "content": {
                          "type": "string",
                          "description": "The content of the documentation sent by the merchant encoded in base64. Max size: 1MB."
                        }
                      }
                    }
                  },
                  "onboardings": {
                    "type": "array",
                    "description": "Array of onboarding objects for different payment providers",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "PREVIOUSLY_ONBOARDED",
                            "ONBOARD_ONTO_THE_PROVIDER"
                          ],
                          "description": "Type of onboarding. If its done by Yuno."
                        },
                        "workflow": {
                          "type": "string",
                          "enum": [
                            "HOSTED_BY_PROVIDER",
                            "DIRECT"
                          ],
                          "description": "Workflow of the onboarding."
                        },
                        "callback_url": {
                          "type": "string",
                          "description": "URL in case to redirect your customer after the onboarding process with the provider, if needed."
                        },
                        "provider": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "enum": [
                                "PAGARME", 
                                "ALELO", 
                                "EDENRED", 
                                "PLUXEE", 
                                "VR", 
                                "STRIPE", 
                                "ADYEN"
                              ],
                              "description": "Provider id.",
                              "example": "PAGARME"
                            },
                            "recipient_id": {
                              "type": "string",
                              "description": "The unique identifier of the provider's recipient."
                            }
                          }
                        },
                        "documentation": {
                          "type": "array",
                          "description": "Array of documentation objects for this onboarding",
                          "items": {
                            "type": "object",
                            "properties": {
                              "file_name": {
                                "type": "string",
                                "description": "The name of the documentation sent (MAX 255; MIN 3)."
                              },
                              "content_type": {
                                "type": "string",
                                "description": "The type of the documentation sent by the merchant."
                              },
                              "content_category": {
                                "type": "string",
                                "description": "The category of the documentation sent by the merchant."
                              },
                              "content": {
                                "type": "string",
                                "description": "The content of the documentation sent by the merchant encoded in base64. Max size: 1MB."
                              }
                            }
                          }
                        },
                        "withdrawal_methods": {
                          "type": "array",
                          "description": "Withdrawal methods for this onboarding",
                          "items": {
                            "type": "object",
                            "properties": {
                              "bank": {
                                "type": "object",
                                "properties": {
                                  "code": {
                                    "type": "string",
                                    "description": "Bank's code (MAX 3; MIN 3)."
                                  },
                                  "branch": {
                                    "type": "string",
                                    "description": "Bank's branch (MAX 3; MIN 3)."
                                  },
                                  "branch_digit": {
                                    "type": "string",
                                    "description": "Bank's branch digit (MAX 3; MIN 3)."
                                  },
                                  "account": {
                                    "type": "string",
                                    "description": "Beneficiary's bank account number (MAX 250; MIN 3)."
                                  },
                                  "account_digit": {
                                    "type": "string",
                                    "description": "Beneficiary's bank account digit (MAX 250; MIN 3)."
                                  },
                                  "account_type": {
                                    "type": "string",
                                    "enum": [
                                      "CHECKINGS",
                                      "SAVINGS"
                                    ],
                                    "description": "Beneficiary's bank account type (MAX 3; MIN 1)."
                                  },
                                  "routing": {
                                    "type": "string",
                                    "description": "Beneficiary's bank account routing number."
                                  },
                                  "country": {
                                    "type": "string",
                                    "description": "The bank account's country (ISO 3166-1 MAX 2; MIN 2)."
                                  },
                                  "currency": {
                                    "type": "string",
                                    "description": "The bank account's currency (ISO 4217 MAX 3; MIN 3)."
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "Update Contact Info": {
                  "value": {
                    "email": "newemail@example.com",
                    "phone": {
                      "country_code": "57",
                      "number": "9876543210"
                    }
                  }
                },
                "Update Address": {
                  "value": {
                    "address": {
                      "address_line_1": "New Street 123",
                      "city": "New City",
                      "state": "New State",
                      "zip_code": "12345"
                    }
                  }
                },
                "Update Banking Info": {
                  "value": {
                    "withdrawal_methods": [
                      {
                        "bank": {
                          "code": "123",
                          "branch": "YYY",
                          "account": "987654321",
                          "account_type": "CHECKINGS"
                        }
                      }
                    ]
                  }
                },
                "Update Onboarding": {
                  "value": {
                    "onboardings": [
                      {
                        "type": "ONBOARD_ONTO_THE_PROVIDER",
                        "workflow": "DIRECT",
                        "callback_url": "https://myapp.com/new-callback",
                        "provider": {
                          "id": "ADYEN"
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Recipient updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecipientResponse"
                },
                "examples": {
                  "Success Response": {
                    "value": {
                      "id": "9104911d-5df9-429e-8488-ad41abea1a4b",
                      "account_id": "9104911d-5df9-429e-8488-ad41abea1a4b",
                      "merchant_recipient_id": "AAAA01",
                      "national_entity": "INDIVIDUAL",
                      "first_name": "John",
                      "last_name": "Doe",
                      "email": "newemail@example.com",
                      "country": "CO",
                      "created_at": "2024-01-15T10:30:00Z",
                      "updated_at": "2024-01-15T11:45:00Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Recipient not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Recipient",
        "description": "Deletes a recipient. This action cannot be undone.",
        "operationId": "delete-recipient",
        "responses": {
          "204": {
            "description": "Recipient deleted successfully"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Recipient not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "code": "RECIPIENT_NOT_FOUND",
                      "messages": [
                        "Recipient not found"
                      ]
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict - Recipient cannot be deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Conflict": {
                    "value": {
                      "code": "RECIPIENT_IN_USE",
                      "messages": [
                        "Recipient cannot be deleted as it is currently being used in active payments"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/recipients/{recipient_id}/onboardings/{onboardings_id}/cancel": {
      "parameters": [
        {
          "name": "recipient_id",
          "in": "path",
          "required": true,
          "description": "The unique identifier of the recipient",
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "summary": "Cancel Onboarding",
        "description": "Cancels a recipient. This action can be undone by unblocking the recipient.",
        "operationId": "cancel-recipient",
        "responses": {
          "200": {
            "description": "Recipient cancelled successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecipientResponse"
                },
                "examples": {
                  "Success Response": {
                    "value": {
                      "id": "9104911d-5df9-429e-8488-ad41abea1a4b",
                      "account_id": "9104911d-5df9-429e-8488-ad41abea1a4b",
                      "merchant_recipient_id": "AAAA01",
                      "national_entity": "INDIVIDUAL",
                      "first_name": "John",
                      "last_name": "Doe",
                      "email": "john.doe@email.com",
                      "country": "CO",
                      "created_at": "2024-01-15T10:30:00Z",
                      "updated_at": "2024-01-15T12:00:00Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Recipient not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "code": "RECIPIENT_NOT_FOUND",
                      "messages": [
                        "Recipient not found"
                      ]
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict - Recipient cannot be cancelled",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Conflict": {
                    "value": {
                      "code": "RECIPIENT_ALREADY_CANCELLED",
                      "messages": [
                        "Recipient is already cancelled"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/recipients/{recipient_id}/onboardings/{onboardings_id}/block": {
      "parameters": [
        {
          "name": "recipient_id",
          "in": "path",
          "required": true,
          "description": "The unique identifier of the recipient",
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "summary": "Block Recipient",
        "description": "Blocks a recipient. This prevents the recipient from receiving payments until unblocked.",
        "operationId": "block-recipient",
        "responses": {
          "200": {
            "description": "Recipient blocked successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecipientResponse"
                },
                "examples": {
                  "Success Response": {
                    "value": {
                      "id": "9104911d-5df9-429e-8488-ad41abea1a4b",
                      "account_id": "9104911d-5df9-429e-8488-ad41abea1a4b",
                      "merchant_recipient_id": "AAAA01",
                      "national_entity": "INDIVIDUAL",
                      "first_name": "John",
                      "last_name": "Doe",
                      "email": "john.doe@email.com",
                      "country": "CO",
                      "created_at": "2024-01-15T10:30:00Z",
                      "updated_at": "2024-01-15T12:00:00Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Recipient not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "code": "RECIPIENT_NOT_FOUND",
                      "messages": [
                        "Recipient not found"
                      ]
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict - Recipient cannot be blocked",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Conflict": {
                    "value": {
                      "code": "RECIPIENT_ALREADY_BLOCKED",
                      "messages": [
                        "Recipient is already blocked"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/recipients/{recipient_id}/onboardings/{onboardings_id}/unblock": {
      "parameters": [
        {
          "name": "recipient_id",
          "in": "path",
          "required": true,
          "description": "The unique identifier of the recipient",
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "summary": "Unblock Recipient",
        "description": "Unblocks a recipient. This allows the recipient to receive payments again.",
        "operationId": "unblock-recipient",
        "responses": {
          "200": {
            "description": "Recipient unblocked successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecipientResponse"
                },
                "examples": {
                  "Success Response": {
                    "value": {
                      "id": "9104911d-5df9-429e-8488-ad41abea1a4b",
                      "account_id": "9104911d-5df9-429e-8488-ad41abea1a4b",
                      "merchant_recipient_id": "AAAA01",
                      "national_entity": "INDIVIDUAL",
                      "first_name": "John",
                      "last_name": "Doe",
                      "email": "john.doe@email.com",
                      "country": "CO",
                      "created_at": "2024-01-15T10:30:00Z",
                      "updated_at": "2024-01-15T12:00:00Z"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Recipient not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Not Found": {
                    "value": {
                      "code": "RECIPIENT_NOT_FOUND",
                      "messages": [
                        "Recipient not found"
                      ]
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict - Recipient cannot be unblocked",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                },
                "examples": {
                  "Conflict": {
                    "value": {
                      "code": "RECIPIENT_NOT_BLOCKED",
                      "messages": [
                        "Recipient is not blocked"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/new-endpoint": {
      "get": {
        "description": "",
        "operationId": "get_new-endpoint",
        "responses": {
          "200": {
            "description": ""
          }
        },
        "parameters": []
      }
    }
  },
  "x-readme": {
    "headers": [
      {
        "key": "charset",
        "value": "utf-8"
      }
    ],
    "explorer-enabled": true,
    "proxy-enabled": true
  },
  "x-readme-fauxas": true
}
